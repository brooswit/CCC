local sources = {}



local function _source(newUser, newRepo)
  table.insert(sources, {
    user = newUser,
    repo = newRepo
  })
end

function source(newUser, newRepo)
  print("module: adding source '" .. newUser .. "/" .. newRepo .. "'")
  _source(newUser, newRepo)
end



local function _remove(path)
  if fs.exists(path) then
    fs.delete(path)
  end
end

function remove(path)
  print("module: removing '" .. path .. "'")
  _remove(path)
end



local function _install(path, branch)
  if fs.exists(path) then
    print("module: module '" .. path .. "' found locally")
  else
    fs.makeDir(path)
    fs.delete(path)
    local found = false
    for index, source in ipairs(sources) do
      if not found then
        local user = source.user
        local repo = source.repo
        
        print(user)
        print(repo)
        print(branch)
        print(path)

        local url = "https://raw.githubusercontent.com/" .. user .. "/" .. repo .. "/" .. branch .. "/" .. path
        local request = http.get(url)
        
        if request then
          local response = request.readAll()
          local file = fs.open(path, "w")
          file.write(response)
          file.close()
          found = true
        end
      end
    end
    if found then
      print("module: module '" .. path .. "' found remotely")
    else
      print("module: module '" .. path .. "' not found")
    end
  end
end

function install(path, branch)
  branch = branch or "master"
  print("module: installing '" .. path .. "/" .. branch .. "'")
  _install(path, branch)
end



local function _update(path, branch)
  _remove(path)
  _install(path, branch)
end

function update(path, branch)
  branch = branch or "master"
  print("module: updating '" .. path .. "/" .. branch .. "'")
  _update(path, branch)
end



local function _require(path, branch)
  _install(path, branch)
  if fs.exists(path) then
    os.loadAPI(path)
  end
end

function require(path, branch)
  branch = branch or "master"
  print("module: requiring '" .. path .. "/" .. branch .. "'")
  _require(path, branch)
end



source("brooswit", "ccc")
